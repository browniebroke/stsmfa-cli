[build-system]
build-backend = "poetry.core.masonry.api"
requires = [ "poetry-core>=1" ]

[tool.poetry]
name = "stsmfa-cli"
version = "1.4.4"
description = "A small CLI to help with creating AWS profile for MFA protected sessions"
authors = [ "Bruno Alla <alla.brunoo@gmail.com>" ]
license = "MIT"
readme = "README.md"
repository = "https://github.com/browniebroke/stsmfa-cli"
classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "Intended Audience :: Developers",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Libraries",
  "Programming Language :: Python :: 3.12",
]
packages = [
  { include = "stsmfa", from = "src" },
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/browniebroke/stsmfa-cli/issues"
"Changelog" = "https://github.com/browniebroke/stsmfa-cli/blob/main/CHANGELOG.md"

[tool.poetry.scripts]
stsmfa = "stsmfa.cli:app"
awsmfa = "stsmfa.cli:app"

[tool.poetry.dependencies]
python = "^3.9"
boto3 = "^1.26"
typer = "^0.14.0"
rich = ">=10.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-cov = "^6.0.0"
pyfakefs = "^5.0.0"
pytest-mock = "^3.10.0"

[tool.ruff]
target-version = "py39"
line-length = 88

lint.select = [
  "B",   # flake8-bugbear
  "C4",  # flake8-comprehensions
  "D",   # flake8-docstrings
  "E",   # pycodestyle
  "F",   # pyflake
  "I",   # isort
  "RUF", # ruff specific
  "S",   # flake8-bandit
  "UP",  # pyupgrade
  "W",   # pycodestyle
]
lint.ignore = [
  "D100", # Missing docstring in public module
  "D104", # Missing docstring in public package
  "D107", # Missing docstring in `__init__`
  "D203", # 1 blank line required before class docstring
  "D212", # Multi-line docstring summary should start at the first line
  "D401", # First line of docstring should be in imperative mood
]
lint.per-file-ignores."setup.py" = [ "D100" ]
lint.per-file-ignores."tests/**/*" = [
  "D100",
  "D101",
  "D102",
  "D103",
  "D104",
  "S101",
]
lint.isort.known-first-party = [ "stsmfa", "tests" ]

[tool.pytest.ini_options]
addopts = "-v -Wdefault --cov=stsmfa --cov-report=term-missing:skip-covered"
pythonpath = [ "src" ]

[tool.coverage.run]
branch = true
omit = [
  "src/stsmfa/__maIn__.py",
]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "@overload",
  "if TYPE_CHECKING",
  "raise NotImplementedError",
  'if __name__ == "__main__":',
]

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
mypy_path = "src/"
no_implicit_optional = true
show_error_codes = true
warn_unreachable = true
warn_unused_ignores = true
exclude = [
  'setup.py',
]

[[tool.mypy.overrides]]
module = "tests.*"
allow_untyped_defs = true

[tool.semantic_release]
version_toml = [ "pyproject.toml:tool.poetry.version" ]
version_variables = [
  "src/stsmfa/__init__.py:__version__",
]
build_command = "pip install poetry && poetry build"

[tool.semantic_release.changelog]
exclude_commit_patterns = [
  "chore.*",
  "ci.*",
  "Merge pull request .*",
]

[tool.semantic_release.changelog.environment]
keep_trailing_newline = true

[tool.semantic_release.branches.main]
match = "main"

[tool.semantic_release.branches.noop]
match = "(?!main$)"
prerelease = true

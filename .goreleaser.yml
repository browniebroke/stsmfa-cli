version: 2

before:
  hooks:
    - go mod tidy
    - go generate ./...

builds:
  - id: stsmfa
    main: ./cmd/stsmfa
    binary: stsmfa
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - "386"
      - amd64
      - arm
      - arm64
    ignore:
      - goos: darwin
        goarch: "386"
      - goos: windows
        goarch: arm
      - goos: windows
        goarch: arm64
    ldflags:
      - -s -w -X main.version={{.Version}}
  - id: awsmfa
    main: ./cmd/awsmfa
    binary: awsmfa
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - "386"
      - amd64
      - arm
      - arm64
    ignore:
      - goos: darwin
        goarch: "386"
      - goos: windows
        goarch: arm
      - goos: windows
        goarch: arm64
    ldflags:
      - -s -w -X main.version={{.Version}}

archives:
  - format: tar.gz
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        format: zip

checksum:
  name_template: "checksums.txt"

snapshot:
  name_template: "{{ incpatch .Version }}-next"

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"

# Homebrew configuration
brews:
  - name: stsmfa-cli
    homepage: "https://github.com/browniebroke/stsmfa-cli"
    description: "A small CLI to help with creating AWS profile for MFA protected sessions"
    license: "MIT"
    repository:
      owner: browniebroke
      name: homebrew-tap
    commit_author:
      name: goreleaserbot
      email: bot@goreleaser.com
    install: |
      bin.install "stsmfa"
      bin.install "awsmfa"
    test: |
      system "#{bin}/stsmfa --help"
      system "#{bin}/awsmfa --help"
